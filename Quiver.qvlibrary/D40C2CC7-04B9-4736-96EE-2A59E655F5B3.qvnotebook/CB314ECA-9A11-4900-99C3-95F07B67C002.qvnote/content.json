{
  "title": "Java并发",
  "cells": [
    {
      "type": "text",
      "data": "<h2>7.1Executor框架</h2><div>Executors创建线程池方法:</div><div>&nbsp;其实都是 创建了&nbsp;<span style=\"color: rgb(20, 25, 30); font-family: 'PingFang SC', Helvetica, 'Helvetica Neue', 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">ThreadPoolExecutor</span></div><h3>7.2 自定义线程池</h3><div><span style=\"color: rgb(20, 25, 30); font-family: 'PingFang SC', Helvetica, 'Helvetica Neue', 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">ThreadPoolExecutor()</span><br></div><div><div class=\"detail-content \" style=\"margin: 0px; padding: 0px; text-indent: 2em; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, STHeiti, 'Microsoft Yahei', sans-serif; font-size: 16px; line-height: 32px; color: rgb(20, 25, 30); word-wrap: break-word;\"><p style=\"margin: 0px 0px 14px; padding: 0px;\">一、ThreadPoolExecutor的重要参数</p><pre class=\"prettyprint\" style=\"margin-top: 25px; margin-bottom: 0.8em; padding: 10px; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; font-size: 0.92857em; position: relative; border: none; overflow: auto; line-height: 1.3; max-height: 500px; text-indent: 0px; background-color: rgb(238, 238, 238) !important;\"><code style=\"font-size: 1em; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; color: rgb(199, 37, 78);\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">、</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">corePoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：核心线程数</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">核心线程会一直存活，及时没有任务需要执行</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当线程数小于核心线程数时，即使有线程空闲，线程池也会优先创建新线程处理</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">设置</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">allowCoreThreadTimeout</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">true</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">（默认</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">false</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">）时，核心线程会超时关闭</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">2</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">、</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">queueCapacity</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：任务队列容量（阻塞队列）</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当核心线程数达到最大时，新任务会放在队列中排队等待执行</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">3</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">、</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">maxPoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：最大线程数</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当线程数&gt;=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">corePoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">，且任务队列已满时。线程池会创建新线程来处理任务</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当线程数=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">maxPoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">，且任务队列已满时，线程池会拒绝处理任务而抛出异常</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">4</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">、</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> keepAliveTime</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：线程空闲时间</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当线程空闲时间达到</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">keepAliveTime</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">时，线程会退出，直到线程数量=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">corePoolSize\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">如果</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">allowCoreThreadTimeout</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">true</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">，则会直到线程数量=</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">5</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">、</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">allowCoreThreadTimeout</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：允许核心线程超时</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">6</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">、</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">rejectedExecutionHandler</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：任务拒绝处理器</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">两种情况会拒绝处理任务：</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当线程数已经达到</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">maxPoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">，切队列已满，会拒绝新任务</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当线程池被调用</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">shutdown</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()后，会等待线程池里的任务执行完毕，再</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">shutdown</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">。如果在调用</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">shutdown</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()和线程池真正</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">shutdown</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">之间提交任务，会拒绝新任务</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">线程池会调用</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">rejectedExecutionHandler</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">来处理这个任务。如果没有设置默认是</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">AbortPolicy</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">，会抛出异常</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">ThreadPoolExecutor</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">类有几个内部实现类来处理这类情况：</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">AbortPolicy</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">丢弃任务，抛运行时异常</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">CallerRunsPolicy</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">执行任务</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">DiscardPolicy</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">忽视，什么都不会发生</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">DiscardOldestPolicy</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">从队列中踢出最先进入队列（最后一个执行）的任务</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">实现</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">RejectedExecutionHandler</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">接口，可自定义处理器</span></code></pre><p style=\"margin: 0px 0px 14px; padding: 0px;\">二、ThreadPoolExecutor执行顺序</p><pre class=\"prettyprint\" style=\"margin-top: 25px; margin-bottom: 0.8em; padding: 10px; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; font-size: 0.92857em; position: relative; border: none; overflow: auto; line-height: 1.3; max-height: 500px; text-indent: 0px; background-color: rgb(238, 238, 238) !important;\"><code style=\"font-size: 1em; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; color: rgb(199, 37, 78);\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">线程池按以下行为执行任务</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当线程数小于核心线程数时，创建线程。</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">2.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当线程数大于等于核心线程数，且任务队列未满时，将任务放入任务队列。</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">3.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">当线程数大于等于核心线程数，且任务队列已满</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">若线程数小于最大线程数，创建线程</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">若线程数等于最大线程数，抛出异常，拒绝任务</span></code></pre><p style=\"margin: 0px 0px 14px; padding: 0px;\">三、如何设置参数</p><pre class=\"prettyprint\" style=\"margin-top: 25px; margin-bottom: 0.8em; padding: 10px; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; font-size: 0.92857em; position: relative; border: none; overflow: auto; line-height: 1.3; max-height: 500px; text-indent: 0px; background-color: rgb(238, 238, 238) !important;\"><code style=\"font-size: 1em; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; color: rgb(199, 37, 78);\"><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">、默认值</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> corePoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> queueCapacity</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Integer</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">MAX_VALUE\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> maxPoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Integer</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">MAX_VALUE\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> keepAliveTime</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">60s</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> allowCoreThreadTimeout</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"kwd\" style=\"color: rgb(0, 0, 136);\">false</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> rejectedExecutionHandler</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">AbortPolicy</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">2</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">、如何来设置</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">需要根据几个值来决定</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> tasks </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：每秒的任务数，假设为</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">500</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">~</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1000</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> taskcost</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：每个任务花费时间，假设为</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0.1s</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> responsetime</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：系统允许容忍的最大响应时间，假设为</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1s</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n        </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">做几个计算</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> corePoolSize </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">每秒需要多少个线程处理？</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> \n                </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> threadcount </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> tasks</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">/(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">taskcost</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">tasks</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">taskcout </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">500</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">~</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1000</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)*</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0.1</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">50</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">~</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">100</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">个线程。</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">corePoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">设置应该大于</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">50</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n                </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">根据</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">8020</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">原则，如果</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">80</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">%的每秒任务数小于</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">800</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">，那么</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">corePoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">设置为</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">80</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">即可</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> queueCapacity </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">coreSizePool</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">taskcost</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">responsetime\n                </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">计算可得</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> queueCapacity </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">80</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">/</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">0.1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">80</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">。意思是队列里的线程可以等待</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1s</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">，超过了的需要新开线程来执行</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n                </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">切记不能设置为</span><span class=\"typ\" style=\"color: rgb(102, 0, 102);\">Integer</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">MAX_VALUE</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">，这样队列会很大，线程数只会保持在</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">corePoolSize</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">大小，当任务陡增时，不能新开线程来执行，响应时间会随之陡增。</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> maxPoolSize </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">max</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">tasks</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> queueCapacity</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)/(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">taskcost</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n                </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">计算可得</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> maxPoolSize </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">1000</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">80</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)/</span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">10</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">92</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n                </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">（最大任务数-队列容量）/每个线程每秒处理能力</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">最大线程数</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> rejectedExecutionHandler</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">：根据具体情况来决定，任务不重要可丢弃，任务重要则要利用一些缓冲机制来处理</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n            </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> keepAliveTime</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">和</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">allowCoreThreadTimeout</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">采用默认通常能满足</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">\n\n    </span><span class=\"lit\" style=\"color: rgb(0, 102, 102);\">3</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">、</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">以上都是理想值，实际情况下要根据机器性能来决定。如果在未达到最大线程数的情况机器</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">cpu load</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">已经满了，则需要通过升级硬件（呵呵）和优化代码，降低</span><span class=\"pln\" style=\"color: rgb(0, 0, 0);\">taskcost</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">来处理。</span></code></pre></div><div class=\"cat-box\" style=\"margin: 0px; padding: 0px; color: rgb(20, 25, 30); font-family: 'PingFang SC', Helvetica, 'Helvetica Neue', 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px;\"><div class=\"cat-wrap clearfix\" style=\"margin: 0px; padding: 0px;\"><span class=\"l\" style=\"float: left;\"></span></div></div><br style=\"color: rgb(20, 25, 30); font-family: 'PingFang SC', Helvetica, 'Helvetica Neue', 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px;\"><span style=\"color: rgb(20, 25, 30); font-family: 'PingFang SC', Helvetica, 'Helvetica Neue', 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">作者： 如饥似渴的学习IN&nbsp;</span><br style=\"color: rgb(20, 25, 30); font-family: 'PingFang SC', Helvetica, 'Helvetica Neue', 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px;\"><span style=\"color: rgb(20, 25, 30); font-family: 'PingFang SC', Helvetica, 'Helvetica Neue', 微软雅黑, Tahoma, Arial, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">链接：</span><a href=\"http://www.imooc.com/article/5887\">http://www.imooc.com/article/5887</a></div><div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div></div>"
    }
  ]
}