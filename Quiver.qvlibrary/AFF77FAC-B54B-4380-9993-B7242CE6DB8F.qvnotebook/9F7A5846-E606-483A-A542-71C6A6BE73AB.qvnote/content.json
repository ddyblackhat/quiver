{
  "title": "Redis持久化",
  "cells": [
    {
      "type": "text",
      "data": "<div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">数据备份： RDB 和 AOF<br></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">RDB</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">#   In the example below the behaviour will be to save:</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">#   after 900 sec (15 min) if at least 1 key changed</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">#   after 300 sec (5 min) if at least 10 keys changed</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">#   after 60 sec if at least 10000 keys changed</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">#   save \"\"</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><br></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">save 900 1</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">save 300 10</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">save 60 10000</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">优点:</div><ul yne-block-type=\"list\"><li style=\"list-style-type: disc; list-style-position: inside; white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">RDB 是一个非常紧凑的文件</li><li style=\"list-style-type: disc; list-style-position: inside; white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">RDB 在保存RDB文件时父进程唯一要做的的就是fork出一个子进程，父进程不需要再做其他IO操作，所以RDB持久化方式可以最大化redis的性能</li><li style=\"list-style-type: disc; list-style-position: inside; white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">与AOF相比，在恢复大的数据集的时候，RDB方式会更快一些。</li></ul><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">缺点: </div><ul yne-block-type=\"list\"><li style=\"list-style-type: disc; list-style-position: inside; white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">数据丢失风险大</li><li style=\"list-style-type: disc; list-style-position: inside; white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">RDB需要经常fork子进程来保存数据集 到硬盘上，当数据集比较大的时候，fork的过程是非常耗时的，可能会导致Redis在一些毫秒级不能响应客户端请求</li></ul><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><br></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">AOF：</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">优点：</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">AOF文件是一个只进行追加的日志文件</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">Redis可以在AOF 文件体积变得过大时，自动地在后台对AOF重写</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">AOF文件有序地保存了对数据库执行的所有写入操作，这些写入操作以Redis协议的格式保存，因此AOF文件的内容非常容易被人读懂，对文件进行分析也很轻松</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">缺点:</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">对于相同的数据集来说，AOF文件的体积通常要大于RDB文件的体积</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">根据所使用的fsync策略，AOF的速度可能会幔于RDB</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">配置:</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">18. 指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为no</span></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:13px;font-family:Microsoft YaHei,STXihei;color:#ff0000;font-weight:bold\">appendonly no</span></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">19. 指定更新日志文件名，默认为appendonly.aof</span></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:13px;font-family:Microsoft YaHei,STXihei;color:#ff0000;font-weight:bold\">appendfilename appendonly.aof</span></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">20. 指定更新日志条件，共有3个可选值：&nbsp;</span></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-size:13px;font-family:Microsoft YaHei,STXihei;color:#ff0000;font-weight:bold\">no</span><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">：表示等操作系统进行数据缓存同步到磁盘（快）&nbsp;</span></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-size:13px;font-family:Microsoft YaHei,STXihei;color:#ff0000;font-weight:bold\">always</span><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）&nbsp;</span></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-size:13px;font-family:Microsoft YaHei,STXihei;color:#ff0000;font-weight:bold\">everysec</span><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">：表示每秒同步一次（折衷，默认值）</span></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><span style=\"font-size: 13px; font-family: 'Microsoft YaHei', STXihei;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-size:13px;font-family:Microsoft YaHei,STXihei;color:#ff0000;font-weight:bold\">appendfsync everysec</span></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><br></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">21 重写时是否可以运用Appendfsync, 用默认no即可，保证数据安全</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"> no-appendfsync-on-rewrite no</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">设置重写的基准值:</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">auto-aof-rewrite-percentage 100</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">auto-aof-rewrite-min-size 64mb</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><br></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">AOF和RDB都是有命令可以 修复备份文件的</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">AOF 和 RDB是可以同时存在的，服务器启动加载 默认是AOF  </div><hr yne-bulb-block=\"hr\" style=\"clear: both;\"><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">主从复制:</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">①配置从机  </div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">slaveof    主机ip   端口号</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">主从策略：</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">一主多从：只有一个主机， 主机掉电后 从机待命，并不上位  主机掉电后可以使用 slave no  one 命令 停止与其他数据库的同步，转成主数据库</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">去中心化，链式主从:    A&lt;-B&lt;-C  </div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><br></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">复制原理:</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">重新连接 都会全量复制，之后是增量复制 </div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">slave会向master 发送一个sync命令，master收集所有的修改命令发送到slave</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">哨兵模式:</div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\">监控master和slave  , master down机后选举master </div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><br></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><br></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><br></div><div yne-bulb-block=\"paragraph\" style=\"white-space: pre-wrap; line-height: 1.5; font-size: 14px;\"><br></div>"
    }
  ]
}