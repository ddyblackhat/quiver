{
  "title": "面试总结",
  "cells": [
    {
      "type": "markdown",
      "data": "\n### Java 基础：\n1. String  StringBuffer  区别\n2. ArrayList  LinkdedList  区别 \n3. HashMap  ConcurrentHashMap  实现原理\n4. ThreadLocal  这个类实现原理和用途，在哪里用到了\n  每个ThreadLocal可以放一个线程级别的变量,但是它本身可以被多个线程共享变量，而且又可以达到线程安全的目的，且绝对线程安全\n  spring的事物管理Session, 连接池管理 Connection\n  (http://www.cnblogs.com/dolphin0520/p/3920407.html)\n5. 序列化\n6. 重写和重载区别\n```\n方法的重写规则\n参数列表必须完全与被重写方法的相同；\n返回类型必须完全与被重写方法的返回类型相同；\n访问权限不能比父类中被重写的方法的访问权限更低。例如：如果父类的一个方法被声明为public，那么在子类中重写该方法就不能声明为protected。\n父类的成员方法只能被它的子类重写。\n声明为final的方法不能被重写。\n声明为static的方法不能被重写，但是能够被再次声明。\n子类和父类在同一个包中，那么子类可以重写父类所有方法，除了声明为private和final的方法。\n子类和父类不在同一个包中，那么子类只能够重写父类的声明为public和protected的非final方法。\n重写的方法能够抛出任何非强制异常，无论被重写的方法是否抛出异常。但是，重写的方法不能抛出新的强制性异常，或者比被重写方法声明的更广泛的强制性异常，反之则可以。\n构造方法不能被重写。\n如果不能继承一个方法，则不能重写这个方法。\n```\n\n### 算法\n1. 字符串: S  目标串:T  求 T在S中的最大子串 \n\n### 缓存：\n1. redis  是怎么保证 数据一致的？\n2. redis  和  memcache 的区别 \n\n### 数据库\nmysql 查询语句\n1. 查询下载数目最多的用户\n2. 优化经验 \n3. 怎么判断表是否存在\n\n### jvm\n内存泄漏和内存溢出的区别\njstack 命令的使用 \n\n### 框架\n1. hibernate 缓存\n\n\n### 工具\n#### maven\n1. maven 项目部署到本地仓库是什么命令  install  deploy是远程仓库\n\n#### git\n1. git 合并分之是用的什么？merge 和 rebase  (https://github.com/geeeeeeeeek/git-recipes/wiki)\n\n\n\n\n"
    }
  ]
}